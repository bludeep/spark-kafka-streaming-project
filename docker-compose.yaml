version: '3.8'
services:
  zookeeper:
    image: bitnamilegacy/zookeeper:3.9
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:3.6.1
    container_name: kafka
    ports: 
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  spark-master:
    image: bitnami/spark:3.5.0
    container_name: spark-master
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8080:8080"
    volumes:
      - ./app:/opt/spark-apps
      - spark_checkpoint:/checkpoint
  
  spark-worker-1:
    image: bitnami/spark:3.5.0
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    volumes:
      - spark_checkpoint:/checkpoint
  
  spark-worker-2:
    image: bitnami/spark:3.5.0
    container_name: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    volumes:
      - spark_checkpoint:/checkpoint

  jupyter:
    build: ./ 
    container_name: jupyter
    ports:
      - "8888:8888"
      - "8501:8501"
    volumes:
      - ./notebooks:/home/jovyan/work
      - spark_checkpoint:/checkpoint
    depends_on:
      - kafka
      - spark-master
      - postgresql

  postgresql:
    image: postgres:15
    container_name: postgresql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: realestate
      POSTGRES_USER: spark_user  
      POSTGRES_PASSWORD: spark_password
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

volumes:
  spark_checkpoint:
